name: Docker Image CI

on:
  push:
    branches: [ main, develop, 'feature/**', 'release/**', 'hotfix/**']
  pull_request:
    branches: [ main, develop, 'release/**']

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [ backend, frontend ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver: docker-container

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - id: meta
        if: |
          github.ref_name == 'main' ||  
          github.ref_name == 'develop' ||  
          startsWith(github.ref_name, 'release/')
        uses: docker/metadata-action@v5
        with:
          images: heliosryuu/langduck
          tags: |
            type=raw,value=${{ matrix.service }}-latest,enable=${{ github.ref_name == 'main' }}
            type=raw,value=${{ matrix.service }}-develop,enable=${{ github.ref_name == 'develop' }}
            type=ref,event=branch,prefix=${{ matrix.service }}-release-,suffix=,enable=${{ startsWith(github.ref_name, 'release/') }}

      - name: Docker layer caching
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.service }}-${{ github.ref_name }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.service }}-  

      # 1) main → only latest
      - name: Build & push ${{ matrix.service }} image (latest)
        if: |
          github.ref_name == 'main' ||  
          github.ref_name == 'develop' ||          startsWith(github.ref_name, 'release/')
        uses: docker/build-push-action@v6
        with:
          context: ./${{ matrix.service }}
          file: ./${{ matrix.service }}/Dockerfile
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          annotations: ${{ steps.meta.outputs.annotations }}
          provenance: ${{ github.ref_name == 'main' || github.ref_name == 'develop' || startsWith(github.ref_name, 'release/')}}
          sbom: ${{ github.ref_name == 'main' || github.ref_name == 'develop' || startsWith(github.ref_name, 'release/')}}

      # 2) feature/hotfix → build only (no push)
      - name: Build ${{ matrix.service }} image only (no push)
        if: |
          startsWith(github.ref_name, 'feature/') ||  
          startsWith(github.ref_name, 'hotfix/')
        uses: docker/build-push-action@v6
        with:
          context: ./${{ matrix.service }}
          file: ./${{ matrix.service }}/Dockerfile
          push: false
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
          tags: |
            heliosryuu/langduck:${{ matrix.service }}-${{ github.ref_name }}