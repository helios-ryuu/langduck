services:
  postgres:
    image: postgres:17.5-alpine3.22
    container_name: postgres
    restart: unless-stopped
    env_file: [ .env ]
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DATABASE}" ]
      interval: 10s
      timeout: 5s
      retries: 6
      start_period: 10s
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: dev
    container_name: backend
    restart: unless-stopped
    env_file: [ .env ]
    command: >
      sh -c "php artisan migrate && \      
             php artisan serve --host=0.0.0.0 --port=${LARAVEL_PORT}"
    volumes:
      - ./backend:/app:cached
      - backend-vendor:/app/vendor
      - backend-node-modules:/app/node_modules
    ports:
      - "${LARAVEL_PORT:-8000}:8000"
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: unless-stopped
    env_file: [ .env ]
    command: ["npm", "run", "dev", "--", "--host"]
    volumes:
      - ./frontend:/app:cached
      - frontend-node-modules:/app/node_modules
    ports:
      - "${FRONTEND_PORT:-5173}:5173"

volumes:
  postgres-data:
  backend-vendor:
  frontend-node-modules:
  backend-node-modules:

networks:
  default:
    driver: bridge